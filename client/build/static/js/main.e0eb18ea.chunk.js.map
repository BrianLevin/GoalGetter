{"version":3,"sources":["pages/newgoal.js","components/SignupForm/index.js","pages/signup.js","components/LoginForm/index.js","pages/login.js","components/deleteBtn/index.js","pages/updategoal.js","components/Homepage/index.js","pages/homepage.js","App.js","serviceWorker.js","index.js"],"names":["NewGoal","props","state","value","className","type","id","placeholder","multiple","label","rows","React","Component","Signup","username","password","confirmPassword","handleSubmit","bind","handleChange","event","this","setState","target","name","preventDefault","axios","post","then","response","console","log","data","errmsg","getSnapshotBeforeUpdate","redirectTo","catch","error","Form","Group","controlId","Label","Control","onChange","Button","variant","onClick","SignupForm","LoginForm","status","updateUser","loggedIn","to","pathname","href","Login","DeleteBtn","role","tabIndex","UpdateGoal","Hero","style","backgroundImage","children","Homepage","Container","marginTop","Row","Col","size","src","alt","block","App","exact","path","component","LogIn","SignUp","NewGoals","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e0eb18ea.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass NewGoal extends React.Component {\n    constructor(props) { // as soon as component is rendered\n        super(props); // calls the parent react component class structure\n        this.state = { value: '' }; // intializing state data is being in compoent so its intializing it\n    }\n\n    render() { // renders bootstrap html\n        return (\n            <form>\n                <div className=\"form-group\">\n                    <label>Title of new goal</label>\n                    <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"New Goal\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>categories</label>\n                    <select multiple className=\"form-control\" id=\"exampleFormControlSelect2\">\n                        <optgroup label='health'>\n                            <option>Sleep</option>\n                            <option>Nutrition</option>\n                            <option>Stress Relief</option>\n                        </optgroup>\n\n                        <optgroup label='travel'>\n                            <option>The U.S</option>\n                            <option>Europe</option>\n                            <option>Asia</option>\n                        </optgroup>\n\n                        <optgroup label='fitness'>\n                            <option>Running</option>\n                            <option>Weight Training</option>\n                            <option>Special Events</option>\n                        </optgroup>\n\n                        <optgroup label='personal finance'>\n                            <option>Investments</option>\n                            <option>Saving</option>\n                            <option>Spending</option>\n                        </optgroup>\n\n                        <optgroup label='business'>\n                            <option>Networking Events</option>\n                            <option>Ideas</option>\n                            <option>Mentoring</option>\n                        </optgroup>\n\n                        <optgroup label='Recreational Activities'>\n                            <option>Softball</option>\n                            <option>Happy Hour</option>\n                            <option> Kickball</option>\n                        </optgroup>\n                    </select>\n                </div>\n\n                {/*   sub category drop down here dropdown*/}\n                <div className=\"form-group\">\n                    <label>Description</label>\n                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Create new goal</button>\n\n            </form>\n\n        );\n    }\n}\n\nexport default NewGoal;","import React, { Component } from \"react\";\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport axios from \"axios\";\n\nclass Signup extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    };\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        axios.post(\"/api/auth/signup\", {\n            username: this.state.username,\n            password: this.state.password\n        })\n            .then(response => {\n                console.log(response)\n                if (!response.data.errmsg) {\n                    console.log(\"successful signup\")\n                    // this.getSnapshotBeforeUpdate({\n                    //     // direct to login page\n                    //     redirectTo: \"/login\"\n                    // })\n                    this.getSnapshotBeforeUpdate({\n                        // direct to homepage after successful login\n                        redirectTo: \"/homepage\"\n                    })\n                } else {\n                    console.log(\"username already taken\")\n                }\n            }).catch(error => {\n                console.log(\"signup error\")\n                console.log(error);\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"page\">\n                <h4 className=\"title\">Sign up</h4>\n                <Form className=\"signupSheet\">\n                    <Form.Group controlId=\"formBasicEmail\" className=\"usernameLine\">\n                        <Form.Label>Create Username</Form.Label>\n                        <Form.Control type=\"input\"  name = \"username\" placeholder=\"Enter username\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\" className=\"usernameLine\">\n                        <Form.Label>Password</Form.Label>\n                        {/* {console.log(this.state.password)} */}\n                        <Form.Control type=\"password\"  name = \"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\n                        Submit\n            </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Signup;","import SignupForm from \"../components/SignupForm\";\nimport React, { Component } from \"react\";\n\nclass Signup extends Component {\n    render(){\n        return(\n            <SignupForm />\n        )\n    }\n}\n\nexport default Signup;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport \"./style.css\";\n\nclass LoginForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            password: \"\",\n            redirectTo: null\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n\n        axios.post(\"/user/login\", {\n            username: this.state.username,\n            password: this.state.password\n        })\n            .then(response => {\n                console.log(response)\n                if (response.status === 200) {\n                    this.props.updateUser({\n                        loggedIn: true,\n                        username: response.data.username\n                    })\n                    this.setState({\n                        redirectTo: \"/\"\n                    })\n                }\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    render() {\n        if (this.state.redirectTo) {\n            return <Redirect to={{ pathname: this.state.redirectTo }} />\n        } else {\n            return (\n                <div className=\"page\">\n                    <h4 className=\"title\">Log In</h4>\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\" className=\"usernameLine\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"input\" name= \"username\" placeholder=\"Enter username\" value={this.state.username} onChange={this.handleChange}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\" className=\"usernameLine\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"input\"  name= \"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\n                           <hr></hr>\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit} className=\"submit sub1\">\n                                Submit\n                    </Button>\n                            <Button variant=\"danger\" type=\"submit\" href=\"/signup\" className=\"submit sub2\">\n                                Sign Up!\n                    </Button>\n                        </Form.Group>\n\n                    </Form>\n                </div>\n            )\n        }\n    }\n}\n\nexport default LoginForm;","import LoginForm from \"../components/LoginForm\"\nimport React, { Component } from \"react\";\n\nclass Login extends Component{\n    render() {\n        return(\n            <LoginForm />\n        )\n    }\n}\n\nexport default Login;","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from 'react';\n\nimport DeleteBtn from '../components/deleteBtn';\n\n//import NewGoal from '.pages/newgoal';\n\n\nclass UpdateGoal extends React.Component {\n    constructor(props) { // as soon as component is rendered\n        super(props); // calls the parent react component class structure\n        this.state = { value: '' }; // intializing state data is being in compoent so its intializing it\n    }\n\n    \n\n   \n    \n// populate info with what I already have // get the ID of the user is trying to update then make a backend  api call and then all info we are getting you save it into state. then just update that we get data base.\n    render() { // renders bootstrap html\n        return (\n            <form>\n                <div className=\"form-group\">\n                    <label>Title of new goal</label>\n                    <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"New Goal\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>categories</label>\n                    <select multiple className=\"form-control\" id=\"exampleFormControlSelect2\">\n                        <optgroup label='health'>\n                            <option>Sleep</option>\n                            <option>Nutrition</option>\n                            <option>Stress Relief</option>\n                        </optgroup>\n\n                        <optgroup label='travel'>\n                            <option>The U.S</option>\n                            <option>Europe</option>\n                            <option>Asia</option>\n                        </optgroup>\n\n                        <optgroup label='fitness'>\n                            <option>Running</option>\n                            <option>Weight Training</option>\n                            <option>Special Events</option>\n                        </optgroup>\n\n                        <optgroup label='personal finance'>\n                            <option>Investments</option>\n                            <option>Saving</option>\n                            <option>Spending</option>\n                        </optgroup>\n\n                        <optgroup label='business'>\n                            <option>Networking Events</option>\n                            <option>Ideas</option>\n                            <option>Mentoring</option>\n                        </optgroup>\n\n                        <optgroup label='Recreational Activities'>\n                            <option>Softball</option>\n                            <option>Happy Hour</option>\n                            <option> Kickball</option>\n                        </optgroup>\n                    </select>\n                </div>\n\n                {/*   sub category drop down here dropdown*/}\n                <div className=\"form-group\">\n                    <label>Description</label>\n                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Create new goal</button>\n             <DeleteBtn/>\n            </form>\n\n        );\n    }\n}\n\nexport default UpdateGoal;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Hero(props) {\n  return (\n    <div>\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      </div>\n    <div className=\"logo text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      {props.children}\n    </div>\n    </div>\n  );\n}\n\nexport default Hero;","import React from \"react\";\nimport Hero from \"../components/Homepage\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nfunction Homepage() {\n    return (\n        <div>\n            <Hero backgroundImage=\"./images/createGs1.jpg\"></Hero>\n            <Container style={{ marginTop: 30 }}>\n                <Row>\n                    <Col size=\"md-12\">\n                        {/* <h1>Welcome to</h1> */}\n                        <img src=\"../images/logo5.png\" alt=\"Goal Getter Logo\" className=\"logo\"></img>\n                    </Col>\n                    <Button variant=\"light\" size=\"lg\" block className='createBtn'>\n                        Create New Goals                    \n                    </Button>\n                    <Button variant=\"dark\" size=\"lg\" block className='updateBtn'>\n                        View/Update Goals\n                    </Button>\n                    <Button variant=\"dark\" size=\"lg\" block className='connectBtn'>\n                        Connect with Other Users\n                    </Button>\n                </Row>\n                <Row>\n                    {/* <Col size=\"md-12\">\n                            <input type=\"text\"></input>\n                            <button>You got this!!!</button>\n                    </Col> */}\n                </Row>\n            </Container>\n\n        </div>\n\n    )\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NewGoals from \"./pages/newgoal\";\nimport SignUp from \"./pages/signup\";\nimport LogIn from \"./pages/login\";\nimport UpdateGoal from \"./pages/updategoal\";\nimport Homepage from \"./pages/homepage\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n\n        <Route exact path=\"/\" component={LogIn} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/newgoals\" component={NewGoals} />\n        <Route exact path=\"/updategoal\" component={UpdateGoal} />\n        <Route exact path=\"/homepage\" component={Homepage} />\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}